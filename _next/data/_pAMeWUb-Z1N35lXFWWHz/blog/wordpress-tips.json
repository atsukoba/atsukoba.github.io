{"pageProps":{"content":"\nログイン画面変更，SEO，画像最適化と高速化などでとりあえずやることを書いておく\n\n## ログイン画面変更\n\n```php\n// add to functions.php\nfunction custom_login()\n{\n  $style = '\n  <style>\n    .login > #login > h1 > a {\n      background-image: url(PATH/TO/IMAGE.png);\n      background-size: 100%;\n      width: 100%;\n      height: 100px;\n    }\n    .login > #login > h1::after {\n      content: \"LOGIN DESCRIPTION\";\n      font-size: 1rem;\n    }\n  </style>\n  ';\n  echo $style;\n}\nadd_action('login_enqueue_scripts', 'custom_login');\n```\n\n## SEO\n\n`All in One SEO Pack`で meta タグ挿入，<https://search.google.com/search-console>での検索最適化\n\n- sitemap の登録と ping\n\n`XML Sitemap Generator for WordPress`を用いるが，この際に「html 形式のサイトマップを含める」のチェックを外すこと（search console 上で xml 外の形式だとエラーが出るため）\n\n## サイト高速化\n\n<https://developers.google.com/speed/pagespeed/insights> でのスピード診断を行い，SP/PC 両方での速度の向上を図る。 WordPress では高速化のためのプラグインが複数あるため，そのうち今回導入した事例を示す\n\n### imagify\n\npagespeed insights の診断結果で「次世代フォーマットでの画像の配信」が上位に来る時，サイト内で読み込んでいる画像のサイズが大きさを減らせば大幅な改善が期待できる。imagify というプラグインでは，メディアライブラリ上の画像ファイルを（サムネイル等の別サイズも含め）自動的に縮小してくれるため，非常に有効。\n\n画質が気にならない場合はすべて Ultra モードで縮小化しても構わない。背景画像等はそもそもの解像度も小さくする（resize）する\n\n### Asset CleanUp\n\npagespeed insights の診断結果で「レンダリングを妨げるリソースの除外」が上位に来る場合は外部ファイルの読み込み時間を減らすことで大幅な改善が期待できる。`Asset CleanUp`を用いて以下の処置をし，速度が改善したので示す。\n\n- css の縮小化と結合\n- 使っていない css の除去\n- Google Fonts の CDN リクエストが複数存在する際の一本化&async にする\n\n(ただしフロント開発の際は Sass の map とかも無効化され可読性が著しく下がるので開発終了後に行う)\n","data":{"title":"WordPressのTips（ログイン画面変更・最適化などのメモ）","description":"ログイン画面変更，SEO，画像最適化と高速化などでとりあえずやること","slug":"wordpress-tips","date":"2019-08-04T00:26:20.000Z","category":"Tech Blog","tags":["WordPress"],"keyVisual":"https://i.gyazo.com/abc431092a83b10dfaffb2f883590bef.png"}},"__N_SSG":true}