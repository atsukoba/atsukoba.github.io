{"pageProps":{"content":"\nProcessing の IDE が非常にイヤなので，まずは[Qiita: Processing を Visual Studio Code で動かしたい](https://qiita.com/jacynthe/items/d31eaa77496295c10556)を参照し設定する。しかしこの記事のやり方だと，1 スケッチ毎に`.vscode`による設定をしなければならずイヤなので，例えば[Processing でゼロから学ぶプログラミング・ビジュアルアートの公式リポジトリ](https://github.com/cocopon/zero-pde)なんかを clone してきて試す時に，プロジェクトフォルダに内包されている複数のスケッチを即時実行できるように改良したメモです。\n\n## 準備\n\nまずは上述の[Qiita 記事](https://qiita.com/jacynthe/items/d31eaa77496295c10556)通りにセッティングを行う。そしたら Processing のインストール。ラクなので`Homebrew`を使う。\n\n### install.sh\n\n```shell\n# homebrew\nif !(type \"brew\" > /dev/null 2>&1); then\n    echo \"install HomeBrew...\"\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" < /dev/null 2> /dev/null ; brew install caskroom/cask/brew-cask 2> /dev/null\n\nelse\n    echo \"Homebrew is already installed\"\nfi\n\nif !(type \"processing-java\" > /dev/null 2>&1); then\n    brew tap caskroom/cask\n    brew install brew-cask\n    echo \"installing Processing via Homebrew...\"\n    brew cask install -v processing\n\n    echo \"Open Processing and install processing-java (from menu bar > Tools > install processing-java)\"\n    echo \"input path to Processing.app: \"\n    read pjpath\n    echo \"adding path\"\n    sudo ln -s ${pjpath}/processing-java /usr/local/bin/\nelse\n    pjpath=$(which processing-java)\n    echo \"processing-java is already installed : ${pjpath}\"\nfi\n\necho \"add path to vscode setting (tasks.json)\"\nsed -i -e \"s|\\\"command\\\":.*|\\\"command\\\": \\\"${pjpath}\\\",|g\" .vscode/tasks.json\n```\n\nそして，生成・編集された`tasks.json`の`\"args\"`の`\"--sketch\"`部分を，[visualstudio.com: Variables Reference](https://code.visualstudio.com/docs/editor/variables-reference)を頼りに編集する。\n\n### .vscode/tasks.json\n\n```json\n\"--sketch=${workspaceRoot}/${relativeFileDirname}\"\n```\n\nこれによりスケッチフォルダのパスがちゃんと渡される。\n\n### Variable Reference\n\n```txt\n${workspaceFolder} - the path of the folder opened in VS Code\n${workspaceFolderBasename} - the name of the folder opened in VS Code without any slashes (/)\n${file} - the current opened file\n${relativeFile} - the current opened file relative to workspaceFolder\n${relativeFileDirname} - the current opened file's dirname relative to workspaceFolder\n${fileBasename} - the current opened file's basename\n${fileBasenameNoExtension} - the current opened file's basename with no file extension\n${fileDirname} - the current opened file's dirname\n${fileExtname} - the current opened file's extension\n${cwd} - the task runner's current working directory on startup\n${lineNumber} - the current selected line number in the active file\n${selectedText} - the current selected text in the active file\n${execPath} - the path to the running VS Code executable\n```\n\nこれにより，プロジェクトフォルダ直下の`.pde`でなくても，`Command + Shift + B`で実行できる。ウレシイ。\n\nここで，試しに`git submodule add git@github.com:cocopon/zero-pde.git`をして，Processing でゼロから学ぶプログラミング・ビジュアルアートを試す等すると良いかも。\n","data":{"title":"Processingのvscode開発環境を構築(Mac)","description":"Processingのvscode開発環境をMac向けに構築しました","slug":"processing-on-vscode","date":"2019-08-25T07:16:23.000Z","category":"Tech Blog","tags":["Processing","Visual Studio Code"],"keyVisual":"https://i.gyazo.com/2458c026d0085fae794cd1f5ff8b5bfd.jpg"}},"__N_SSG":true}